package com.project.pages;

import java.io.IOException;
import java.util.List;
import java.util.Set;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.Point;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.interactions.touch.TouchActions;
import org.openqa.selenium.support.PageFactory;

import com.project.city.BasePage;
import com.project.city.MobileActions;
import com.project.utility.ProjectUtility;

import io.appium.java_client.PerformsTouchActions;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.touch.TapOptions;
import io.appium.java_client.MobileBy;
import io.appium.java_client.MobileElement;
import io.appium.java_client.MultiTouchAction;


import com.framework.utility.GeneralUtility;

public class SiteMainPage extends BasePage {

	static final Logger log = LogManager.getLogger(SiteMainPage.class.getName());
	static String callNumber;
	MobileActions mobileActions;

	public SiteMainPage(AndroidDriver<WebElement> driver) throws IOException {
		super(driver);
		PageFactory.initElements(driver, this);
		}

	
	
	public boolean searchFromSite(String search) throws Exception {
		boolean bVerify = false;
		
		
		// Begin flow of the login
		log.info("Begin the flow of the search in the application");
		try {
				
				driver.get("https://www.ramat-gan.muni.il/search-result/?searchFor=%D7%90%D7%A8%D7%A0%D7%95%D7%A0%D7%94");
				GeneralUtility.Sleep();
				driver.findElement(By.xpath("//*[@id=\"MainPageContentPlaceHolder_SVSrvPrezZoneHolder0_ctl00_searchFor\"]")).click();
				driver.findElement(By.xpath("//*[@id=\"MainPageContentPlaceHolder_SVSrvPrezZoneHolder0_ctl00_searchFor\"]")).sendKeys("הנחות בארנונה");
				driver.findElement(By.xpath("//*[@id=\"MainPageContentPlaceHolder_SVSrvPrezZoneHolder0_ctl00_searchButton\"]")).click();
				
				GeneralUtility.Sleep(5);
				Actions act = new Actions(driver);
				act.sendKeys(Keys.ARROW_DOWN).build().perform();
				bVerify = IsObjectExist(By.xpath("//*[@id=\"MainPageContentPlaceHolder_SVSrvPrezZoneHolder0_ctl00_SearchResultsRepeater_SearchResultsHyperLink_0\"]"));
				
		//return bVerify;

		} catch (TimeoutException te) {
			log.fatal("Exception received: ");
			te.printStackTrace();
			return false;
		} catch (Exception e) {
			log.fatal("Exception received: ");
			e.printStackTrace();
			return false;
		}
		if (!bVerify)
			log.error("Create call failed in verify fields process");

		return bVerify;
	}

	
	public boolean getIntoPage(String page) throws Exception {
		boolean bVerify = false;
		
		
		// Begin flow of the login
		log.info("Begin the flow of the search in the application");
		try {
			
			switch (page) {
			case "תו חניה":
			{
			
				Actions act = new Actions(driver);
				act.sendKeys(Keys.PAGE_DOWN).build().perform();
				click(By.xpath("//*[@id=\"mainContent\"]/article[2]/div[1]/ul/li[2]/a"));
				GeneralUtility.Sleep();
				act.sendKeys(Keys.ARROW_DOWN).build().perform();
				GeneralUtility.Sleep(5);
				click(By.xpath("//*[@id=\"mainContent\"]/section/section/article/article[2]/article/div/div[30]/span/u/a"));

				GeneralUtility.Sleep(2);
				
				String  handle= driver.getWindowHandle();//Return a string of alphanumeric window handle
				Set<String> handles= driver.getWindowHandles();//Return a set of window handle
				
				for (String h : handles) {
					if (!(h==handle))
				    driver.switchTo().window(h);
				 }
				
				//String url = driver.getCurrentUrl();
				bVerify = IsObjectExist(By.xpath("//*[@id=\"idNumber\"]"));
				driver.switchTo().window(handle);
				break;
			}
			default:
				break;
			}
	


		} catch (TimeoutException te) {
			log.fatal("Exception received: ");
			te.printStackTrace();
			return false;
		} catch (Exception e) {
			log.fatal("Exception received: ");
			e.printStackTrace();
			return false;
		}
		if (!bVerify)
			log.error("Create call failed in verify fields process");

		return bVerify;
	}

	
	public String returnCallNumber() {
		return callNumber;
	}

	
	public boolean deleteCall(String callNumber) throws Exception {

		// Verify the call number
		driver.switchTo().defaultContent();
		driver.switchTo().frame("contentIFrame1");
		boolean bVerify = verifyWLContainsText(By.xpath("//*[@id=\"pws_casenumber\"]/div[1]/span"), callNumber);

		// בדיקת מנעול
		if (bVerify) {
			bVerify = IsObjectExist(By.xpath("//*[@id=\"pws_neighborhoodid\"]/span/img"));
			bVerify = IsObjectExist(By.xpath("//*[@id=\"pws_public_cl\"]/img"));
			bVerify = IsObjectExist(By.xpath("//*[@id=\"pws_casenumber\"]/span/img"));

		}

		driver.switchTo().defaultContent();

		if (bVerify) {

			Actions act = new Actions(driver);
			act.doubleClick(driver.findElement(
					By.xpath("//*[@id=\"incident|NoRelationship|Form|Mscrm.Form.incident.Delete\"]/span/a/img")))
					.build().perform();

			GeneralUtility.Sleep(2);
			driver.switchTo().frame("InlineDialog_Iframe");

			act = new Actions(driver);
			act.click(driver.findElement(By.xpath("//*[@id=\"butBegin\"]/div"))).build().perform();
			// clickJS(By.xpath("//li[@id='incident|NoRelationship|Form|Mscrm.Form.incident.Delete']"));
		}

		GeneralUtility.Sleep(4);
		driver.switchTo().defaultContent();
		driver.switchTo().frame("contentIFrame0");
		bVerify = verifyWLContainsText(By.xpath("//*[@id=\"gridBodyTable\"]/tbody/tr[2]/td"),
				"אין רשומות פניה זמינות בתצוגה זו");

		// Click on CRMDynamics logo
		driver.switchTo().defaultContent();
		clickJS(By.id("navTabLogoTextId"));

		return bVerify;

	}

	public boolean createCall2() throws InterruptedException, IOException {
		boolean createCall = false;

		// Begin flow of the login
		log.info("Begin the flow of the login");
		try {

			click(By.id("homeButtonImage"));
			GeneralUtility.Sleep();
			clickJS(By.xpath("//a[@id='CS']/span[@class='navActionButtonIconContainer']//img[@alt='שירות']"));
			clickJS(By.xpath("//a[@id='CS']/span[@class='navActionButtonIconContainer']//img[@alt='שירות']"));
			GeneralUtility.Sleep();
			click(By.xpath("//*[@id=\"nav_cases\"]"));
			createCall = IsObjectExist(By.id("crmGrid_divDataArea"));

			createCall = true;
		} catch (TimeoutException te) {
			log.fatal("Exception received: ");
			te.printStackTrace();
			return false;
		} catch (Exception e) {
			log.fatal("Exception received: ");
			e.printStackTrace();
			return false;
		}

		return createCall;
	}

	public boolean logout() throws Exception {
		boolean bLogout = false;

		click(By.xpath("\\"));
		log.info("Exit application");

		bLogout = IsObjectExist(By.xpath("\\test"));

		return bLogout;
	}

	public void formClick(WebElement we, String sValue) throws Exception {
		Actions act = new Actions(driver);
		clickJS(we);
		GeneralUtility.Sleep(2);
		act.sendKeys(we, sValue).build().perform();
		GeneralUtility.Sleep();
		act.sendKeys(we, Keys.ENTER).build().perform();
	}

	public void formSendKeys(WebElement we, String sValue) throws Exception {
		Actions act = new Actions(driver);
		clickJS(we);
		GeneralUtility.Sleep(2);
		act.sendKeys(we, sValue).build().perform();
		GeneralUtility.Sleep();
		act.sendKeys(we, Keys.ENTER).build().perform();
	}
}
